//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/InputSystem_Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem_Actions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem_Actions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem_Actions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""df70fa95-8a34-4494-b137-73ab6b9c7d37"",
            ""actions"": [
                {
                    ""name"": ""Shift Block"",
                    ""type"": ""Button"",
                    ""id"": ""565419bc-33a2-4054-b586-14f54719b62f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop Block"",
                    ""type"": ""Button"",
                    ""id"": ""6ace2ae0-2517-46e8-86d9-e4bf9ca21796"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Modify Block"",
                    ""type"": ""Button"",
                    ""id"": ""7cdda4c1-297c-4fc2-90a8-b8358e15e952"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f6c0bdb0-eba3-41d4-b0c5-a95b407c6ff8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""08870f71-a2f2-4d7b-9a14-f92bee500adb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cf8a8530-b846-4f1d-a3b9-708f3f43af0b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f2c3b680-ccd7-4545-b0df-cd2715aaad55"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0e48525c-8f2f-42c8-a1a0-a9b49bf05565"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9812e034-b6bb-4ef1-9c4a-150cd92904ad"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3c610a0c-2138-410f-8da2-a6e20cb036b3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7431e352-0e3b-437d-b17d-d9089ce824ea"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eddd70e7-0c63-427d-b2e7-fbebdc35d51d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Modify Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c82915aa-1bbb-482d-8420-682ace71ad2e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Modify Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""272f6d14-89ba-496f-b7ff-215263d3219f"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d8279504-1743-40a4-b4ce-8f5b172d1c59"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Pause"",
                    ""type"": ""Button"",
                    ""id"": ""52cbe928-8c4b-49ab-a1d5-85e873eea7df"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""c7906c18-4a34-46fd-9102-e4c75d2214f7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""47d9c2a2-af70-41be-b362-710901567fdd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bd03168-1d6e-473f-8f11-14e536db779b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0493cf35-acaf-4ffb-b66e-03bec12982b8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""85666f52-040f-4916-a855-c54c2ce8e573"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""133adb9e-2efc-436b-b9b8-247b1dd8a4b6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""dcbb5828-9887-47a2-8b2f-960643ffcb2a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ef67b112-5bc0-4db7-b7ab-4860a42b5231"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a4910498-3024-4480-92fb-9866e8a3c5c1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b0d7d516-99fa-48ed-bf7b-9db4841ccff4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""08a4923c-1c9a-458d-bbac-efa7bf076e32"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0b10efd7-1706-43b3-996b-a910ec8031fd"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c16064d-9dbf-4746-8394-345a4535c288"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""1P"",
            ""id"": ""482570a1-b5eb-4d1b-8004-657762d73953"",
            ""actions"": [
                {
                    ""name"": ""Drop Block"",
                    ""type"": ""Button"",
                    ""id"": ""68a9c07b-b6c4-435e-8f38-19d448579cbe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Modify Block"",
                    ""type"": ""Button"",
                    ""id"": ""cfd0897e-5253-4e89-b76e-85650c73d343"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift Block"",
                    ""type"": ""Button"",
                    ""id"": ""71c05c6e-80f7-4f7e-a27e-64061d4bb3a6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1304522c-06ca-4b6f-bee2-2c2a75125dd3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6933d53f-f3bd-4aa7-a263-665d8039d484"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Modify Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""36d1a9d2-86ab-4bea-8399-985b7070a434"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4b5d79b5-95e7-4575-b456-253039ec88ab"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7c52c6f4-cf27-4feb-a1c3-cf873b3ac8d4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""2P"",
            ""id"": ""8d306b13-e420-410e-b186-aeebd71d4b6f"",
            ""actions"": [
                {
                    ""name"": ""Drop Block"",
                    ""type"": ""Button"",
                    ""id"": ""3277f7fb-ed83-4e49-b60c-18a0a41b41b6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Modify Block"",
                    ""type"": ""Button"",
                    ""id"": ""d81d9342-ef9c-43c2-b6d5-ad9797c4a969"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift Block"",
                    ""type"": ""Button"",
                    ""id"": ""366f57d0-dd99-49e5-9604-08273c319da6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""66f65c62-5b06-4fee-9926-08045737faf8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dca415a1-190e-44cc-879f-71cbea24b60e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Modify Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""11efe26e-1a89-484b-898b-567cea813d39"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ad89f11a-7674-4ccf-aad9-0b890fdfd2fb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""aefbc471-b10f-44e0-9d98-d41435ce879b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_ShiftBlock = m_Player.FindAction("Shift Block", throwIfNotFound: true);
        m_Player_DropBlock = m_Player.FindAction("Drop Block", throwIfNotFound: true);
        m_Player_ModifyBlock = m_Player.FindAction("Modify Block", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_TogglePause = m_UI.FindAction("Toggle Pause", throwIfNotFound: true);
        m_UI_Select = m_UI.FindAction("Select", throwIfNotFound: true);
        // 1P
        m__1P = asset.FindActionMap("1P", throwIfNotFound: true);
        m__1P_DropBlock = m__1P.FindAction("Drop Block", throwIfNotFound: true);
        m__1P_ModifyBlock = m__1P.FindAction("Modify Block", throwIfNotFound: true);
        m__1P_ShiftBlock = m__1P.FindAction("Shift Block", throwIfNotFound: true);
        // 2P
        m__2P = asset.FindActionMap("2P", throwIfNotFound: true);
        m__2P_DropBlock = m__2P.FindAction("Drop Block", throwIfNotFound: true);
        m__2P_ModifyBlock = m__2P.FindAction("Modify Block", throwIfNotFound: true);
        m__2P_ShiftBlock = m__2P.FindAction("Shift Block", throwIfNotFound: true);
    }

    ~@InputSystem_Actions()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, InputSystem_Actions.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, InputSystem_Actions.UI.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m__1P.enabled, "This will cause a leak and performance issues, InputSystem_Actions._1P.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m__2P.enabled, "This will cause a leak and performance issues, InputSystem_Actions._2P.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_ShiftBlock;
    private readonly InputAction m_Player_DropBlock;
    private readonly InputAction m_Player_ModifyBlock;
    public struct PlayerActions
    {
        private @InputSystem_Actions m_Wrapper;
        public PlayerActions(@InputSystem_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShiftBlock => m_Wrapper.m_Player_ShiftBlock;
        public InputAction @DropBlock => m_Wrapper.m_Player_DropBlock;
        public InputAction @ModifyBlock => m_Wrapper.m_Player_ModifyBlock;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @ShiftBlock.started += instance.OnShiftBlock;
            @ShiftBlock.performed += instance.OnShiftBlock;
            @ShiftBlock.canceled += instance.OnShiftBlock;
            @DropBlock.started += instance.OnDropBlock;
            @DropBlock.performed += instance.OnDropBlock;
            @DropBlock.canceled += instance.OnDropBlock;
            @ModifyBlock.started += instance.OnModifyBlock;
            @ModifyBlock.performed += instance.OnModifyBlock;
            @ModifyBlock.canceled += instance.OnModifyBlock;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @ShiftBlock.started -= instance.OnShiftBlock;
            @ShiftBlock.performed -= instance.OnShiftBlock;
            @ShiftBlock.canceled -= instance.OnShiftBlock;
            @DropBlock.started -= instance.OnDropBlock;
            @DropBlock.performed -= instance.OnDropBlock;
            @DropBlock.canceled -= instance.OnDropBlock;
            @ModifyBlock.started -= instance.OnModifyBlock;
            @ModifyBlock.performed -= instance.OnModifyBlock;
            @ModifyBlock.canceled -= instance.OnModifyBlock;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_TogglePause;
    private readonly InputAction m_UI_Select;
    public struct UIActions
    {
        private @InputSystem_Actions m_Wrapper;
        public UIActions(@InputSystem_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @TogglePause => m_Wrapper.m_UI_TogglePause;
        public InputAction @Select => m_Wrapper.m_UI_Select;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @TogglePause.started += instance.OnTogglePause;
            @TogglePause.performed += instance.OnTogglePause;
            @TogglePause.canceled += instance.OnTogglePause;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @TogglePause.started -= instance.OnTogglePause;
            @TogglePause.performed -= instance.OnTogglePause;
            @TogglePause.canceled -= instance.OnTogglePause;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // 1P
    private readonly InputActionMap m__1P;
    private List<I_1PActions> m__1PActionsCallbackInterfaces = new List<I_1PActions>();
    private readonly InputAction m__1P_DropBlock;
    private readonly InputAction m__1P_ModifyBlock;
    private readonly InputAction m__1P_ShiftBlock;
    public struct _1PActions
    {
        private @InputSystem_Actions m_Wrapper;
        public _1PActions(@InputSystem_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @DropBlock => m_Wrapper.m__1P_DropBlock;
        public InputAction @ModifyBlock => m_Wrapper.m__1P_ModifyBlock;
        public InputAction @ShiftBlock => m_Wrapper.m__1P_ShiftBlock;
        public InputActionMap Get() { return m_Wrapper.m__1P; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(_1PActions set) { return set.Get(); }
        public void AddCallbacks(I_1PActions instance)
        {
            if (instance == null || m_Wrapper.m__1PActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m__1PActionsCallbackInterfaces.Add(instance);
            @DropBlock.started += instance.OnDropBlock;
            @DropBlock.performed += instance.OnDropBlock;
            @DropBlock.canceled += instance.OnDropBlock;
            @ModifyBlock.started += instance.OnModifyBlock;
            @ModifyBlock.performed += instance.OnModifyBlock;
            @ModifyBlock.canceled += instance.OnModifyBlock;
            @ShiftBlock.started += instance.OnShiftBlock;
            @ShiftBlock.performed += instance.OnShiftBlock;
            @ShiftBlock.canceled += instance.OnShiftBlock;
        }

        private void UnregisterCallbacks(I_1PActions instance)
        {
            @DropBlock.started -= instance.OnDropBlock;
            @DropBlock.performed -= instance.OnDropBlock;
            @DropBlock.canceled -= instance.OnDropBlock;
            @ModifyBlock.started -= instance.OnModifyBlock;
            @ModifyBlock.performed -= instance.OnModifyBlock;
            @ModifyBlock.canceled -= instance.OnModifyBlock;
            @ShiftBlock.started -= instance.OnShiftBlock;
            @ShiftBlock.performed -= instance.OnShiftBlock;
            @ShiftBlock.canceled -= instance.OnShiftBlock;
        }

        public void RemoveCallbacks(I_1PActions instance)
        {
            if (m_Wrapper.m__1PActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(I_1PActions instance)
        {
            foreach (var item in m_Wrapper.m__1PActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m__1PActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public _1PActions @_1P => new _1PActions(this);

    // 2P
    private readonly InputActionMap m__2P;
    private List<I_2PActions> m__2PActionsCallbackInterfaces = new List<I_2PActions>();
    private readonly InputAction m__2P_DropBlock;
    private readonly InputAction m__2P_ModifyBlock;
    private readonly InputAction m__2P_ShiftBlock;
    public struct _2PActions
    {
        private @InputSystem_Actions m_Wrapper;
        public _2PActions(@InputSystem_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @DropBlock => m_Wrapper.m__2P_DropBlock;
        public InputAction @ModifyBlock => m_Wrapper.m__2P_ModifyBlock;
        public InputAction @ShiftBlock => m_Wrapper.m__2P_ShiftBlock;
        public InputActionMap Get() { return m_Wrapper.m__2P; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(_2PActions set) { return set.Get(); }
        public void AddCallbacks(I_2PActions instance)
        {
            if (instance == null || m_Wrapper.m__2PActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m__2PActionsCallbackInterfaces.Add(instance);
            @DropBlock.started += instance.OnDropBlock;
            @DropBlock.performed += instance.OnDropBlock;
            @DropBlock.canceled += instance.OnDropBlock;
            @ModifyBlock.started += instance.OnModifyBlock;
            @ModifyBlock.performed += instance.OnModifyBlock;
            @ModifyBlock.canceled += instance.OnModifyBlock;
            @ShiftBlock.started += instance.OnShiftBlock;
            @ShiftBlock.performed += instance.OnShiftBlock;
            @ShiftBlock.canceled += instance.OnShiftBlock;
        }

        private void UnregisterCallbacks(I_2PActions instance)
        {
            @DropBlock.started -= instance.OnDropBlock;
            @DropBlock.performed -= instance.OnDropBlock;
            @DropBlock.canceled -= instance.OnDropBlock;
            @ModifyBlock.started -= instance.OnModifyBlock;
            @ModifyBlock.performed -= instance.OnModifyBlock;
            @ModifyBlock.canceled -= instance.OnModifyBlock;
            @ShiftBlock.started -= instance.OnShiftBlock;
            @ShiftBlock.performed -= instance.OnShiftBlock;
            @ShiftBlock.canceled -= instance.OnShiftBlock;
        }

        public void RemoveCallbacks(I_2PActions instance)
        {
            if (m_Wrapper.m__2PActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(I_2PActions instance)
        {
            foreach (var item in m_Wrapper.m__2PActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m__2PActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public _2PActions @_2P => new _2PActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnShiftBlock(InputAction.CallbackContext context);
        void OnDropBlock(InputAction.CallbackContext context);
        void OnModifyBlock(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnTogglePause(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
    public interface I_1PActions
    {
        void OnDropBlock(InputAction.CallbackContext context);
        void OnModifyBlock(InputAction.CallbackContext context);
        void OnShiftBlock(InputAction.CallbackContext context);
    }
    public interface I_2PActions
    {
        void OnDropBlock(InputAction.CallbackContext context);
        void OnModifyBlock(InputAction.CallbackContext context);
        void OnShiftBlock(InputAction.CallbackContext context);
    }
}
